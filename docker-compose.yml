version: "3.9"
services:
  frontend:
    image: node:16-alpine
    command: npm start # ou npm start
    restart: on-failure
    working_dir: /app/frontend
    volumes:
      - ./front-end:/app/frontend
    ports:
      - 3000:3000
    environment:
      - BACK_PORT=3001
      - BACK_HOST=backend
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"] # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 10
  backend:
    image: node:16-alpine
    command: npm run dev
    restart: on-failure
    working_dir: /app/backend
    volumes:
      - ./back-end:/app/backend
    ports:
      - 3001:3001
    tty: true
    depends_on:
      mysql: # mysql ou postgres
        condition: service_healthy
    environment:
      - PORT=3001
      - MYSQL_USER=root
      - MYSQL_PASSWORD=password
      - HOSTNAME=mysql # mysql ou postgres
      - MYSQL_PORT=3306
      - MYSQL_DB_NAME=delivery-app
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5
  mysql:
    image: mysql:8.0.21
    container_name: db
    ports:
      - 3002:3306
    environment:
      # - MYSQL_USER=trem
      # - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password
      # - MYSQL_RANDOM_ROOT_PASSWORD=true
      - MYSQL_DATABASE=delivery-app
    restart: "always"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 30s
    cap_add:
      - SYS_NICE # Deve omitir alertas menores
